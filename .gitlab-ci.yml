stages:
  - build
  - deploy

#######################################################################

variables:
  KUBE_NAMESPACE: "karma-$CI_ENVIRONMENT_SLUG"
  APP_NAME: "karma-platform-frontend"
  HELM_REPO_NAME: karma-helm-repo
  HELM_REPO_URL: https://gitlab.project-karma.com/api/v4/projects/21/packages/helm/stable
  IMAGE_NAME: "$CI_REGISTRY/karma/application/frontend-platform/$APP_NAME"
  IMAGE_TAG: "$CI_PIPELINE_ID"

#######################################################################

.build_env: &build_env
  stage: build
  image: docker:19.03.12
  tags:
    - kube

  variables:
    GIT_SUBMODULE_STRATEGY: recursive
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""

  services:
    - docker:19.03.12-dind

  before_script:
    - docker info
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG -f $CI_PROJECT_DIR/docker/platform-admin/Dockerfile-ci $CI_PROJECT_DIR
    - if [ $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH ]; then
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - fi

#######################################################################

.deploy_env: &deploy_env
  stage: deploy
  image: alpine/helm
  tags:
    - kube
  only:
    - main
  before_script:
    - helm repo add --username gitlab-ci-token --password $CI_JOB_TOKEN $HELM_REPO_NAME $HELM_REPO_URL
    - helm repo update
  script:
    - helm upgrade $APP_NAME $HELM_REPO_NAME/karma-backend-application -f $CI_PROJECT_DIR/helm/app-values.yaml --set image.name=$IMAGE_NAME,image.tag=$IMAGE_TAG --namespace $KUBE_NAMESPACE --install

#######################################################################

.env_dev: &env_dev
  environment:
    name: dev

build:
  <<: *build_env

deploy dev:
  <<: *env_dev
  <<: *deploy_env
